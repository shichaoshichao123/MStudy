package com.sc.study.jiuzhang.doublepoint;/** * @author yingqi * @date 2021/12/11 * 两数之差 */public class TwoSumDiff {    public static void main(String[] args) {        int[] result = getDiffNum(new int[]{1, 3, 7, 15, 26}, 2);        System.out.println(result[0] + "," + result[1]);    }    private static int[] getDiffNum(int[] origin, int result) {        if (null == origin || origin.length <= 1) {            return null;        }        for (int i = 0; i < origin.length; i++) {            int j = binarySearch(origin, i + 1, origin.length - 1, result + origin[i]);            if (-1 != j) {                return new int[]{i, j};            }        }        return null;    }    private static int binarySearch(int[] origin, int left, int right, int target) {        int start = left;        int end = right;        while (start + 1 < end) {            int mid = start + (end - start) / 2;            if (origin[mid] == target) {                return mid;            } else if (origin[mid] < target) {                start = mid;            } else {                end = mid;            }        }        if (origin[start] == target) {            return start;        }        if (origin[end] == target) {            return end;        }        return -1;    }}