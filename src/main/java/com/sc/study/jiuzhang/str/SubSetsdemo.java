package com.sc.study.jiuzhang.str;import java.util.ArrayList;import java.util.List;/** * @author yingqi * @date 2021/12/11 */public class SubSetsdemo {    public static void main(String[] args) {        System.out.println(getSets(new int[]{1, 2, 3}));        System.out.println(getKSum(new int[]{1, 2, 3, 0},3, 3));    }    public static List<List<Integer>> getSets(int[] origin) {        List<List<Integer>> result = new ArrayList<>();        if (null == origin || origin.length <= 0) {            return result;        }        doGetSetsDemo(origin, 0, new ArrayList<>(), result);        return result;    }    private static void doGetSets(int[] origin, int start, List<Integer> sub, List<List<Integer>> result) {        result.add(new ArrayList<>(sub));        for (int i = start; i < origin.length; i++) {            sub.add(origin[i]);            doGetSets(origin, i + 1, sub, result);            sub.remove(sub.size() - 1);        }    }    private static void doGetSetsDemo(int[] origin, int start, List<Integer> sub, List<List<Integer>> result) {        result.add(new ArrayList<>(sub));        for (int i = start; i < origin.length; i++) {            sub.add(origin[i]);            doGetSets(origin, i + 1, sub, result);            sub.remove(sub.size() - 1);        }    }    public static List<List<Integer>> getKSum(int[] origin, int num, int target) {        List<List<Integer>> result = new ArrayList<>();        if (null == origin || origin.length <= 0) {            return result;        }        doGetKSum(origin, 0, num, target, new ArrayList<>(), result);        return result;    }    private static void doGetKSum(int[] origin, int index, int k, int target, List<Integer> sub, List<List<Integer>> result) {        if (target == 0 && k == 0) {            result.add(new ArrayList<>(sub));            return;        }        if (k == 0 || target < 0) {            return;        }        for (int i = index; i < origin.length; i++) {            sub.add(origin[i]);            doGetKSum(origin, i + 1, k - 1, target - origin[i], sub, result);            sub.remove(sub.size() - 1);        }    }}